#!/bin/sh

# Slackware repackage script Seamonkey 

# Copyright 2017, 2018, 2019  Mario Preksavec, Zagreb, Croatia
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=seamonkey
BUILD=${BUILD:-1}
CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
SBUILD=$TMP/$PRGNAM
# slackware version
SLKVER="$(cat /etc/slackware-version |head -1)"
if [ "$SLKVER" = "Slackware 14.0" ]; then
echo  build not supported
exit
elif [ "$SLKVER" = "Slackware 14.1" ]; then
echo  build not supported
exit
elif [ "$SLKVER" = "Slackware 14.2" ]; then
 # SLKUSYS="15.0" #uncomment and and remove below when 15.0 is released.
  SLKUSYS="current"
elif [ "$SLKVER" = "Slackware 15.0" ]; then
 # SLKUSYS="15.0" #uncomment and and remove below when 15.0 is released.
  SLKUSYS="current"
else
  SLKUSYS="current"
fi

if [ -z "$ARCH" ]; then
    case "$( uname -m )" in
        i?86) ARCH=i486 ;;
        arm*) ARCH=arm ;;
        *) ARCH=$( uname -m ) ;;
    esac
fi

if [ "$ARCH" = "i586" ]; then
  OSARCH="linux-i686"
  SYS=""
elif [ "$ARCH" = "i686" ]; then
  OSARCH="linux-i686"
  SYS=""
  REPO=$(curl -s https://mirrors.kernel.org/slackware/slackware-$SLKUSYS/slackware/xap/ | grep $PRGNAM | grep "txz<" | cut  -b10-36)
elif [ "$ARCH" = "x86_64" ]; then
  OSARCH="linux-x86_64"
  SYS="64"
  REPO=$(curl -s https://mirrors.kernel.org/slackware/slackware64-$SLKUSYS/slackware64/xap/  | grep $PRGNAM | grep "txz<" | cut  -b10-38)
else
echo  unsupported system
exit
fi
set -e
rm -rf $TMP
rm -rf $PKG
rm -rf $SBUILD 
mkdir -p $TMP $PKG $SBUILD $OUTPUT
echo looking up your version 
cd $SBUILD

#find version 5 digits or 4 digits
SMV5D=$(curl -s https://www.seamonkey-project.org | grep "<b>SeaMonkey" | cut  -b20-27)
SMV4D=$(curl -s https://www.seamonkey-project.org | grep "<b>SeaMonkey" | cut  -b20-25)

URL=https://ftp.mozilla.org/pub/${PRGNAM}/releases/$SMV5D/$OSARCH/en-US/${PRGNAM}-$SMV5D.en-US.$OSARCH.tar.bz2
if curl --output /dev/null --silent --fail -r 0-0 "$URL"; then
DLDURL=$(curl -C - -O https://ftp.mozilla.org/pub/${PRGNAM}/releases/$SMV5D/$OSARCH/en-US/${PRGNAM}-$SMV5D.en-US.$OSARCH.tar.bz2)
VERSION=$SMV5D
else
DLDURL=$(curl -C - -O https://ftp.mozilla.org/pub/${PRGNAM}/releases/$SMV4D/$OSARCH/en-US/${PRGNAM}-$SMV4D.en-US.$OSARCH.tar.bz2)
VERSION=$SMV4D
fi

echo $VERSION is seamonkeys latest stable version

set -e
#find installed version 4 digit or 5 
PKINST4=$(ls /var/log/packages/ | grep seamonkey-2 | cut -b11-16)
PKINST5=$(ls /var/log/packages/ | grep seamonkey-2 | cut -b11-18)
if [ "$PKINST4" = "$VERSION" ]; then
  echo you are running the latest version
  sleep 3
  exit
else
echo checked for 3 digit version now looking for 4
fi

if [ "$PKINST5" = "$VERSION" ]; then
  echo you are running the latest version
  sleep 3
  exit
else
echo going to install or upgrade seamonkey
fi

echo $REPO
sleep 10
$DLDURL
tar xvf *.tar.bz2 
echo wget -c  https://mirrors.kernel.org/slackware/slackware$SYS-$SLKUSYS/slackware$SYS/xap/$REPO
wget -c  https://mirrors.kernel.org/slackware/slackware$SYS-$SLKUSYS/slackware$SYS/xap/$REPO
tar xvf $REPO

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

DOCV=$(ls usr/doc)

mkdir -p $PKG/usr/doc
mkdir -p $PKG/usr/bin
mkdir -p $PKG/usr/lib$SYS
mv usr/doc/$DOCV  $PKG/usr/doc/$PRGNAM-$VERSION
mv usr/share $PKG/usr/
mv $PRGNAM $PKG/usr/lib$SYS/$PRGNAM
#stop semonkey from updating 
rm $PKG/usr/lib$SYS/$PRGNAM/updater
ln -s  $PKG/usr/lib$SYS/$PRGNAM/$PRGNAM $PKG/usr/bin/$PRGNAM


mkdir -p $PKG/install
cat > $PKG/install/slack-desc <<EOF
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description. Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in. You must
# make exactly 11 lines for the formatting to be correct. It's also
# customary to leave one space after the ':'.

         |-----handy-ruler------------------------------------------------------|
seamonkey: seamonkey (an open-source web browser suite)
seamonkey:
seamonkey: The SeaMonkey browser suite. SeaMonkey features a state-of-the-art
seamonkey: web browser and powerful email client, as well as a WYSIWYG web page
seamonkey: composer and a feature-rich IRC chat client.
seamonkey:
seamonkey: Homepage: https://www.seamonkey-project.org/
seamonkey:
seamonkey:
seamonkey:
seamonkey:
EOF
cat > $PKG/install/doinst.sh <<EOF
# Removing /usr/lib/seamonkey from ld.so.conf. That was a hack that we did
# long ago before a standalone mozilla-nss package was shipped.
# Hopefully this won't break everything.  ;-)
( cd etc
  cat ld.so.conf | grep -v /usr/lib/seamonkey > ld.so.conf.new
  mv ld.so.conf.new ld.so.conf
)
if [ -x /sbin/ldconfig ]; then
  /sbin/ldconfig 2> /dev/null
fi
EOF

 
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD.${PKGTYPE:-tgz}
upgradepkg --install-new  $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD.${PKGTYPE:-tgz}
